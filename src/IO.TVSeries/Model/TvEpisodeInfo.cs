/* 
 * IMDb-API
 *
 * The IMDb-API Documentation. You need a <a href='/Identity/Account/Manage' target='_blank'><code>API Key</code></a> for testing APIs.<br/><a class='link' href='/API'>Back to API Tester</a>
 *
 * OpenAPI spec version: 1.8.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// TvEpisodeInfo
    /// </summary>
    [DataContract]
        public partial class TvEpisodeInfo :  IEquatable<TvEpisodeInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TvEpisodeInfo" /> class.
        /// </summary>
        /// <param name="seriesId">seriesId.</param>
        /// <param name="seriesTitle">seriesTitle.</param>
        /// <param name="seriesFullTitle">seriesFullTitle.</param>
        /// <param name="seriesYear">seriesYear.</param>
        /// <param name="seriesYearEnd">seriesYearEnd.</param>
        /// <param name="seasonNumber">seasonNumber.</param>
        /// <param name="episodeNumber">episodeNumber.</param>
        /// <param name="previousEpisodeId">previousEpisodeId.</param>
        /// <param name="nextEpisodeId">nextEpisodeId.</param>
        public TvEpisodeInfo(string seriesId = default(string), string seriesTitle = default(string), string seriesFullTitle = default(string), string seriesYear = default(string), string seriesYearEnd = default(string), string seasonNumber = default(string), string episodeNumber = default(string), string previousEpisodeId = default(string), string nextEpisodeId = default(string))
        {
            this.SeriesId = seriesId;
            this.SeriesTitle = seriesTitle;
            this.SeriesFullTitle = seriesFullTitle;
            this.SeriesYear = seriesYear;
            this.SeriesYearEnd = seriesYearEnd;
            this.SeasonNumber = seasonNumber;
            this.EpisodeNumber = episodeNumber;
            this.PreviousEpisodeId = previousEpisodeId;
            this.NextEpisodeId = nextEpisodeId;
        }
        
        /// <summary>
        /// Gets or Sets SeriesId
        /// </summary>
        [DataMember(Name="seriesId", EmitDefaultValue=false)]
        public string SeriesId { get; set; }

        /// <summary>
        /// Gets or Sets SeriesTitle
        /// </summary>
        [DataMember(Name="seriesTitle", EmitDefaultValue=false)]
        public string SeriesTitle { get; set; }

        /// <summary>
        /// Gets or Sets SeriesFullTitle
        /// </summary>
        [DataMember(Name="seriesFullTitle", EmitDefaultValue=false)]
        public string SeriesFullTitle { get; set; }

        /// <summary>
        /// Gets or Sets SeriesYear
        /// </summary>
        [DataMember(Name="seriesYear", EmitDefaultValue=false)]
        public string SeriesYear { get; set; }

        /// <summary>
        /// Gets or Sets SeriesYearEnd
        /// </summary>
        [DataMember(Name="seriesYearEnd", EmitDefaultValue=false)]
        public string SeriesYearEnd { get; set; }

        /// <summary>
        /// Gets or Sets SeasonNumber
        /// </summary>
        [DataMember(Name="seasonNumber", EmitDefaultValue=false)]
        public string SeasonNumber { get; set; }

        /// <summary>
        /// Gets or Sets EpisodeNumber
        /// </summary>
        [DataMember(Name="episodeNumber", EmitDefaultValue=false)]
        public string EpisodeNumber { get; set; }

        /// <summary>
        /// Gets or Sets PreviousEpisodeId
        /// </summary>
        [DataMember(Name="previousEpisodeId", EmitDefaultValue=false)]
        public string PreviousEpisodeId { get; set; }

        /// <summary>
        /// Gets or Sets NextEpisodeId
        /// </summary>
        [DataMember(Name="nextEpisodeId", EmitDefaultValue=false)]
        public string NextEpisodeId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TvEpisodeInfo {\n");
            sb.Append("  SeriesId: ").Append(SeriesId).Append("\n");
            sb.Append("  SeriesTitle: ").Append(SeriesTitle).Append("\n");
            sb.Append("  SeriesFullTitle: ").Append(SeriesFullTitle).Append("\n");
            sb.Append("  SeriesYear: ").Append(SeriesYear).Append("\n");
            sb.Append("  SeriesYearEnd: ").Append(SeriesYearEnd).Append("\n");
            sb.Append("  SeasonNumber: ").Append(SeasonNumber).Append("\n");
            sb.Append("  EpisodeNumber: ").Append(EpisodeNumber).Append("\n");
            sb.Append("  PreviousEpisodeId: ").Append(PreviousEpisodeId).Append("\n");
            sb.Append("  NextEpisodeId: ").Append(NextEpisodeId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TvEpisodeInfo);
        }

        /// <summary>
        /// Returns true if TvEpisodeInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of TvEpisodeInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TvEpisodeInfo input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SeriesId == input.SeriesId ||
                    (this.SeriesId != null &&
                    this.SeriesId.Equals(input.SeriesId))
                ) && 
                (
                    this.SeriesTitle == input.SeriesTitle ||
                    (this.SeriesTitle != null &&
                    this.SeriesTitle.Equals(input.SeriesTitle))
                ) && 
                (
                    this.SeriesFullTitle == input.SeriesFullTitle ||
                    (this.SeriesFullTitle != null &&
                    this.SeriesFullTitle.Equals(input.SeriesFullTitle))
                ) && 
                (
                    this.SeriesYear == input.SeriesYear ||
                    (this.SeriesYear != null &&
                    this.SeriesYear.Equals(input.SeriesYear))
                ) && 
                (
                    this.SeriesYearEnd == input.SeriesYearEnd ||
                    (this.SeriesYearEnd != null &&
                    this.SeriesYearEnd.Equals(input.SeriesYearEnd))
                ) && 
                (
                    this.SeasonNumber == input.SeasonNumber ||
                    (this.SeasonNumber != null &&
                    this.SeasonNumber.Equals(input.SeasonNumber))
                ) && 
                (
                    this.EpisodeNumber == input.EpisodeNumber ||
                    (this.EpisodeNumber != null &&
                    this.EpisodeNumber.Equals(input.EpisodeNumber))
                ) && 
                (
                    this.PreviousEpisodeId == input.PreviousEpisodeId ||
                    (this.PreviousEpisodeId != null &&
                    this.PreviousEpisodeId.Equals(input.PreviousEpisodeId))
                ) && 
                (
                    this.NextEpisodeId == input.NextEpisodeId ||
                    (this.NextEpisodeId != null &&
                    this.NextEpisodeId.Equals(input.NextEpisodeId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SeriesId != null)
                    hashCode = hashCode * 59 + this.SeriesId.GetHashCode();
                if (this.SeriesTitle != null)
                    hashCode = hashCode * 59 + this.SeriesTitle.GetHashCode();
                if (this.SeriesFullTitle != null)
                    hashCode = hashCode * 59 + this.SeriesFullTitle.GetHashCode();
                if (this.SeriesYear != null)
                    hashCode = hashCode * 59 + this.SeriesYear.GetHashCode();
                if (this.SeriesYearEnd != null)
                    hashCode = hashCode * 59 + this.SeriesYearEnd.GetHashCode();
                if (this.SeasonNumber != null)
                    hashCode = hashCode * 59 + this.SeasonNumber.GetHashCode();
                if (this.EpisodeNumber != null)
                    hashCode = hashCode * 59 + this.EpisodeNumber.GetHashCode();
                if (this.PreviousEpisodeId != null)
                    hashCode = hashCode * 59 + this.PreviousEpisodeId.GetHashCode();
                if (this.NextEpisodeId != null)
                    hashCode = hashCode * 59 + this.NextEpisodeId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
