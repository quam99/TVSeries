/* 
 * IMDb-API
 *
 * The IMDb-API Documentation. You need a <a href='/Identity/Account/Manage' target='_blank'><code>API Key</code></a> for testing APIs.<br/><a class='link' href='/API'>Back to API Tester</a>
 *
 * OpenAPI spec version: 1.8.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// UserRatingDataDemographic
    /// </summary>
    [DataContract]
        public partial class UserRatingDataDemographic :  IEquatable<UserRatingDataDemographic>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UserRatingDataDemographic" /> class.
        /// </summary>
        /// <param name="allAges">allAges.</param>
        /// <param name="agesUnder18">agesUnder18.</param>
        /// <param name="ages18To29">ages18To29.</param>
        /// <param name="ages30To44">ages30To44.</param>
        /// <param name="agesOver45">agesOver45.</param>
        public UserRatingDataDemographic(UserRatingDataDemographicDetail allAges = default(UserRatingDataDemographicDetail), UserRatingDataDemographicDetail agesUnder18 = default(UserRatingDataDemographicDetail), UserRatingDataDemographicDetail ages18To29 = default(UserRatingDataDemographicDetail), UserRatingDataDemographicDetail ages30To44 = default(UserRatingDataDemographicDetail), UserRatingDataDemographicDetail agesOver45 = default(UserRatingDataDemographicDetail))
        {
            this.AllAges = allAges;
            this.AgesUnder18 = agesUnder18;
            this.Ages18To29 = ages18To29;
            this.Ages30To44 = ages30To44;
            this.AgesOver45 = agesOver45;
        }
        
        /// <summary>
        /// Gets or Sets AllAges
        /// </summary>
        [DataMember(Name="allAges", EmitDefaultValue=false)]
        public UserRatingDataDemographicDetail AllAges { get; set; }

        /// <summary>
        /// Gets or Sets AgesUnder18
        /// </summary>
        [DataMember(Name="agesUnder18", EmitDefaultValue=false)]
        public UserRatingDataDemographicDetail AgesUnder18 { get; set; }

        /// <summary>
        /// Gets or Sets Ages18To29
        /// </summary>
        [DataMember(Name="ages18To29", EmitDefaultValue=false)]
        public UserRatingDataDemographicDetail Ages18To29 { get; set; }

        /// <summary>
        /// Gets or Sets Ages30To44
        /// </summary>
        [DataMember(Name="ages30To44", EmitDefaultValue=false)]
        public UserRatingDataDemographicDetail Ages30To44 { get; set; }

        /// <summary>
        /// Gets or Sets AgesOver45
        /// </summary>
        [DataMember(Name="agesOver45", EmitDefaultValue=false)]
        public UserRatingDataDemographicDetail AgesOver45 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UserRatingDataDemographic {\n");
            sb.Append("  AllAges: ").Append(AllAges).Append("\n");
            sb.Append("  AgesUnder18: ").Append(AgesUnder18).Append("\n");
            sb.Append("  Ages18To29: ").Append(Ages18To29).Append("\n");
            sb.Append("  Ages30To44: ").Append(Ages30To44).Append("\n");
            sb.Append("  AgesOver45: ").Append(AgesOver45).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UserRatingDataDemographic);
        }

        /// <summary>
        /// Returns true if UserRatingDataDemographic instances are equal
        /// </summary>
        /// <param name="input">Instance of UserRatingDataDemographic to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UserRatingDataDemographic input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AllAges == input.AllAges ||
                    (this.AllAges != null &&
                    this.AllAges.Equals(input.AllAges))
                ) && 
                (
                    this.AgesUnder18 == input.AgesUnder18 ||
                    (this.AgesUnder18 != null &&
                    this.AgesUnder18.Equals(input.AgesUnder18))
                ) && 
                (
                    this.Ages18To29 == input.Ages18To29 ||
                    (this.Ages18To29 != null &&
                    this.Ages18To29.Equals(input.Ages18To29))
                ) && 
                (
                    this.Ages30To44 == input.Ages30To44 ||
                    (this.Ages30To44 != null &&
                    this.Ages30To44.Equals(input.Ages30To44))
                ) && 
                (
                    this.AgesOver45 == input.AgesOver45 ||
                    (this.AgesOver45 != null &&
                    this.AgesOver45.Equals(input.AgesOver45))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AllAges != null)
                    hashCode = hashCode * 59 + this.AllAges.GetHashCode();
                if (this.AgesUnder18 != null)
                    hashCode = hashCode * 59 + this.AgesUnder18.GetHashCode();
                if (this.Ages18To29 != null)
                    hashCode = hashCode * 59 + this.Ages18To29.GetHashCode();
                if (this.Ages30To44 != null)
                    hashCode = hashCode * 59 + this.Ages30To44.GetHashCode();
                if (this.AgesOver45 != null)
                    hashCode = hashCode * 59 + this.AgesOver45.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
