/* 
 * IMDb-API
 *
 * The IMDb-API Documentation. You need a <a href='/Identity/Account/Manage' target='_blank'><code>API Key</code></a> for testing APIs.<br/><a class='link' href='/API'>Back to API Tester</a>
 *
 * OpenAPI spec version: 1.8.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
//using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing RatingData
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class RatingDataTests
    {
        // TODO uncomment below to declare an instance variable for RatingData
        //private RatingData instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of RatingData
            //instance = new RatingData();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of RatingData
        /// </summary>
        [Test]
        public void RatingDataInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" RatingData
            //Assert.IsInstanceOfType<RatingData> (instance, "variable 'instance' is a RatingData");
        }


        /// <summary>
        /// Test the property 'ImDbId'
        /// </summary>
        [Test]
        public void ImDbIdTest()
        {
            // TODO unit test for the property 'ImDbId'
        }
        /// <summary>
        /// Test the property 'Title'
        /// </summary>
        [Test]
        public void TitleTest()
        {
            // TODO unit test for the property 'Title'
        }
        /// <summary>
        /// Test the property 'FullTitle'
        /// </summary>
        [Test]
        public void FullTitleTest()
        {
            // TODO unit test for the property 'FullTitle'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Year'
        /// </summary>
        [Test]
        public void YearTest()
        {
            // TODO unit test for the property 'Year'
        }
        /// <summary>
        /// Test the property 'ImDb'
        /// </summary>
        [Test]
        public void ImDbTest()
        {
            // TODO unit test for the property 'ImDb'
        }
        /// <summary>
        /// Test the property 'Metacritic'
        /// </summary>
        [Test]
        public void MetacriticTest()
        {
            // TODO unit test for the property 'Metacritic'
        }
        /// <summary>
        /// Test the property 'TheMovieDb'
        /// </summary>
        [Test]
        public void TheMovieDbTest()
        {
            // TODO unit test for the property 'TheMovieDb'
        }
        /// <summary>
        /// Test the property 'RottenTomatoes'
        /// </summary>
        [Test]
        public void RottenTomatoesTest()
        {
            // TODO unit test for the property 'RottenTomatoes'
        }
        /// <summary>
        /// Test the property 'FilmAffinity'
        /// </summary>
        [Test]
        public void FilmAffinityTest()
        {
            // TODO unit test for the property 'FilmAffinity'
        }
        /// <summary>
        /// Test the property 'ErrorMessage'
        /// </summary>
        [Test]
        public void ErrorMessageTest()
        {
            // TODO unit test for the property 'ErrorMessage'
        }

    }

}
