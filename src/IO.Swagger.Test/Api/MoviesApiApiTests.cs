/* 
 * IMDb-API
 *
 * The IMDb-API Documentation. You need a <a href='/Identity/Account/Manage' target='_blank'><code>API Key</code></a> for testing APIs.<br/><a class='link' href='/API'>Back to API Tester</a>
 *
 * OpenAPI spec version: 1.8.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
////using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing MoviesApiApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class MoviesApiApiTests
    {
        //private MoviesApiApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            //instance = new MoviesApiApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MoviesApiApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MoviesApiApi
            //Assert.IsInstanceOfType(typeof(MoviesApiApi), instance, "instance is a MoviesApiApi");
        }

        /// <summary>
        /// Test APIAwardsApiKeyIdGet
        /// </summary>
        [Test]
        public void APIAwardsApiKeyIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string id = null;
            //var response = instance.APIAwardsApiKeyIdGet(apiKey, id);
            //Assert.IsInstanceOf<AwardData> (response, "response is AwardData");
        }
        /// <summary>
        /// Test APIBoxOfficeAllTimeApiKeyGet
        /// </summary>
        [Test]
        public void APIBoxOfficeAllTimeApiKeyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //var response = instance.APIBoxOfficeAllTimeApiKeyGet(apiKey);
            //Assert.IsInstanceOf<BoxOfficeAllTimeData> (response, "response is BoxOfficeAllTimeData");
        }
        /// <summary>
        /// Test APIBoxOfficeApiKeyGet
        /// </summary>
        [Test]
        public void APIBoxOfficeApiKeyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //var response = instance.APIBoxOfficeApiKeyGet(apiKey);
            //Assert.IsInstanceOf<BoxOfficeWeekendData> (response, "response is BoxOfficeWeekendData");
        }
        /// <summary>
        /// Test APIComingSoonApiKeyGet
        /// </summary>
        [Test]
        public void APIComingSoonApiKeyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //var response = instance.APIComingSoonApiKeyGet(apiKey);
            //Assert.IsInstanceOf<NewMovieData> (response, "response is NewMovieData");
        }
        /// <summary>
        /// Test APICompanyApiKeyIdGet
        /// </summary>
        [Test]
        public void APICompanyApiKeyIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string id = null;
            //var response = instance.APICompanyApiKeyIdGet(apiKey, id);
            //Assert.IsInstanceOf<CompanyData> (response, "response is CompanyData");
        }
        /// <summary>
        /// Test APIExternalSitesApiKeyIdGet
        /// </summary>
        [Test]
        public void APIExternalSitesApiKeyIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string id = null;
            //var response = instance.APIExternalSitesApiKeyIdGet(apiKey, id);
            //Assert.IsInstanceOf<ExternalSiteData> (response, "response is ExternalSiteData");
        }
        /// <summary>
        /// Test APIFAQApiKeyIdGet
        /// </summary>
        [Test]
        public void APIFAQApiKeyIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string id = null;
            //var response = instance.APIFAQApiKeyIdGet(apiKey, id);
            //Assert.IsInstanceOf<FAQData> (response, "response is FAQData");
        }
        /// <summary>
        /// Test APIFullCastApiKeyIdGet
        /// </summary>
        [Test]
        public void APIFullCastApiKeyIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string id = null;
            //var response = instance.APIFullCastApiKeyIdGet(apiKey, id);
            //Assert.IsInstanceOf<FullCastData> (response, "response is FullCastData");
        }
        /// <summary>
        /// Test APIIMDbListApiKeyIdGet
        /// </summary>
        [Test]
        public void APIIMDbListApiKeyIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string id = null;
            //var response = instance.APIIMDbListApiKeyIdGet(apiKey, id);
            //Assert.IsInstanceOf<IMDbListData> (response, "response is IMDbListData");
        }
        /// <summary>
        /// Test APIImagesApiKeyIdGet
        /// </summary>
        [Test]
        public void APIImagesApiKeyIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string apiKey = null;
            //var response = instance.APIImagesApiKeyIdGet(id, apiKey);
            //Assert.IsInstanceOf<ImageData> (response, "response is ImageData");
        }
        /// <summary>
        /// Test APIImagesApiKeyIdOptionsGet
        /// </summary>
        [Test]
        public void APIImagesApiKeyIdOptionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string id = null;
            //string options = null;
            //var response = instance.APIImagesApiKeyIdOptionsGet(apiKey, id, options);
            //Assert.IsInstanceOf<ImageData> (response, "response is ImageData");
        }
        /// <summary>
        /// Test APIInTheatersApiKeyGet
        /// </summary>
        [Test]
        public void APIInTheatersApiKeyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //var response = instance.APIInTheatersApiKeyGet(apiKey);
            //Assert.IsInstanceOf<NewMovieData> (response, "response is NewMovieData");
        }
        /// <summary>
        /// Test APIKeywordApiKeyIdGet
        /// </summary>
        [Test]
        public void APIKeywordApiKeyIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string id = null;
            //var response = instance.APIKeywordApiKeyIdGet(apiKey, id);
            //Assert.IsInstanceOf<KeywordData> (response, "response is KeywordData");
        }
        /// <summary>
        /// Test APIMetacriticReviewsApiKeyIdGet
        /// </summary>
        [Test]
        public void APIMetacriticReviewsApiKeyIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string id = null;
            //var response = instance.APIMetacriticReviewsApiKeyIdGet(apiKey, id);
            //Assert.IsInstanceOf<MetacriticReviewData> (response, "response is MetacriticReviewData");
        }
        /// <summary>
        /// Test APIMostPopularMoviesApiKeyGet
        /// </summary>
        [Test]
        public void APIMostPopularMoviesApiKeyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //var response = instance.APIMostPopularMoviesApiKeyGet(apiKey);
            //Assert.IsInstanceOf<MostPopularData> (response, "response is MostPopularData");
        }
        /// <summary>
        /// Test APIMostPopularTVsApiKeyGet
        /// </summary>
        [Test]
        public void APIMostPopularTVsApiKeyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //var response = instance.APIMostPopularTVsApiKeyGet(apiKey);
            //Assert.IsInstanceOf<MostPopularData> (response, "response is MostPopularData");
        }
        /// <summary>
        /// Test APINameApiKeyIdGet
        /// </summary>
        [Test]
        public void APINameApiKeyIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string id = null;
            //var response = instance.APINameApiKeyIdGet(apiKey, id);
            //Assert.IsInstanceOf<NameData> (response, "response is NameData");
        }
        /// <summary>
        /// Test APINameAwardsApiKeyIdGet
        /// </summary>
        [Test]
        public void APINameAwardsApiKeyIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string id = null;
            //var response = instance.APINameAwardsApiKeyIdGet(apiKey, id);
            //Assert.IsInstanceOf<NameAwardData> (response, "response is NameAwardData");
        }
        /// <summary>
        /// Test APIPostersApiKeyIdGet
        /// </summary>
        [Test]
        public void APIPostersApiKeyIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string id = null;
            //var response = instance.APIPostersApiKeyIdGet(apiKey, id);
            //Assert.IsInstanceOf<PosterData> (response, "response is PosterData");
        }
        /// <summary>
        /// Test APIRatingsApiKeyIdGet
        /// </summary>
        [Test]
        public void APIRatingsApiKeyIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string id = null;
            //var response = instance.APIRatingsApiKeyIdGet(apiKey, id);
            //Assert.IsInstanceOf<RatingData> (response, "response is RatingData");
        }
        /// <summary>
        /// Test APIReviewsApiKeyIdGet
        /// </summary>
        [Test]
        public void APIReviewsApiKeyIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string id = null;
            //var response = instance.APIReviewsApiKeyIdGet(apiKey, id);
            //Assert.IsInstanceOf<ReviewData> (response, "response is ReviewData");
        }
        /// <summary>
        /// Test APISearchAllApiKeyExpressionGet
        /// </summary>
        [Test]
        public void APISearchAllApiKeyExpressionGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string expression = null;
            //var response = instance.APISearchAllApiKeyExpressionGet(apiKey, expression);
            //Assert.IsInstanceOf<SearchData> (response, "response is SearchData");
        }
        /// <summary>
        /// Test APISearchApiKeyExpressionGet
        /// </summary>
        [Test]
        public void APISearchApiKeyExpressionGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string expression = null;
            //var response = instance.APISearchApiKeyExpressionGet(apiKey, expression);
            //Assert.IsInstanceOf<SearchData> (response, "response is SearchData");
        }
        /// <summary>
        /// Test APISearchCompanyApiKeyExpressionGet
        /// </summary>
        [Test]
        public void APISearchCompanyApiKeyExpressionGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string expression = null;
            //var response = instance.APISearchCompanyApiKeyExpressionGet(apiKey, expression);
            //Assert.IsInstanceOf<SearchData> (response, "response is SearchData");
        }
        /// <summary>
        /// Test APISearchEpisodeApiKeyExpressionGet
        /// </summary>
        [Test]
        public void APISearchEpisodeApiKeyExpressionGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string expression = null;
            //var response = instance.APISearchEpisodeApiKeyExpressionGet(apiKey, expression);
            //Assert.IsInstanceOf<SearchData> (response, "response is SearchData");
        }
        /// <summary>
        /// Test APISearchKeywordApiKeyExpressionGet
        /// </summary>
        [Test]
        public void APISearchKeywordApiKeyExpressionGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string expression = null;
            //var response = instance.APISearchKeywordApiKeyExpressionGet(apiKey, expression);
            //Assert.IsInstanceOf<SearchData> (response, "response is SearchData");
        }
        /// <summary>
        /// Test APISearchMovieApiKeyExpressionGet
        /// </summary>
        [Test]
        public void APISearchMovieApiKeyExpressionGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string expression = null;
            //var response = instance.APISearchMovieApiKeyExpressionGet(apiKey, expression);
            //Assert.IsInstanceOf<SearchData> (response, "response is SearchData");
        }
        /// <summary>
        /// Test APISearchNameApiKeyExpressionGet
        /// </summary>
        [Test]
        public void APISearchNameApiKeyExpressionGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string expression = null;
            //var response = instance.APISearchNameApiKeyExpressionGet(apiKey, expression);
            //Assert.IsInstanceOf<SearchData> (response, "response is SearchData");
        }
        /// <summary>
        /// Test APISearchSeriesApiKeyExpressionGet
        /// </summary>
        [Test]
        public void APISearchSeriesApiKeyExpressionGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string expression = null;
            //var response = instance.APISearchSeriesApiKeyExpressionGet(apiKey, expression);
            //Assert.IsInstanceOf<SearchData> (response, "response is SearchData");
        }
        /// <summary>
        /// Test APISearchTitleApiKeyExpressionGet
        /// </summary>
        [Test]
        public void APISearchTitleApiKeyExpressionGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string expression = null;
            //var response = instance.APISearchTitleApiKeyExpressionGet(apiKey, expression);
            //Assert.IsInstanceOf<SearchData> (response, "response is SearchData");
        }
        /// <summary>
        /// Test APISeasonEpisodesApiKeyIdSeasonNumberGet
        /// </summary>
        [Test]
        public void APISeasonEpisodesApiKeyIdSeasonNumberGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string id = null;
            //string seasonNumber = null;
            //var response = instance.APISeasonEpisodesApiKeyIdSeasonNumberGet(apiKey, id, seasonNumber);
            //Assert.IsInstanceOf<SeasonEpisodeData> (response, "response is SeasonEpisodeData");
        }
        /// <summary>
        /// Test APITop250MoviesApiKeyGet
        /// </summary>
        [Test]
        public void APITop250MoviesApiKeyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //var response = instance.APITop250MoviesApiKeyGet(apiKey);
            //Assert.IsInstanceOf<Top250Data> (response, "response is Top250Data");
        }
        /// <summary>
        /// Test APITop250TVsApiKeyGet
        /// </summary>
        [Test]
        public void APITop250TVsApiKeyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //var response = instance.APITop250TVsApiKeyGet(apiKey);
            //Assert.IsInstanceOf<Top250Data> (response, "response is Top250Data");
        }
        /// <summary>
        /// Test APITrailerApiKeyIdGet
        /// </summary>
        [Test]
        public void APITrailerApiKeyIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string id = null;
            //var response = instance.APITrailerApiKeyIdGet(apiKey, id);
            //Assert.IsInstanceOf<TrailerData> (response, "response is TrailerData");
        }
        /// <summary>
        /// Test APIUsageApiKeyGet
        /// </summary>
        [Test]
        public void APIUsageApiKeyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //var response = instance.APIUsageApiKeyGet(apiKey);
            //Assert.IsInstanceOf<UsageData> (response, "response is UsageData");
        }
        /// <summary>
        /// Test APIUserRatingsApiKeyIdGet
        /// </summary>
        [Test]
        public void APIUserRatingsApiKeyIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string id = null;
            //var response = instance.APIUserRatingsApiKeyIdGet(apiKey, id);
            //Assert.IsInstanceOf<UserRatingData> (response, "response is UserRatingData");
        }
        /// <summary>
        /// Test APIYouTubeTrailerApiKeyIdGet
        /// </summary>
        [Test]
        public void APIYouTubeTrailerApiKeyIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string id = null;
            //var response = instance.APIYouTubeTrailerApiKeyIdGet(apiKey, id);
            //Assert.IsInstanceOf<YouTubeTrailerData> (response, "response is YouTubeTrailerData");
        }
        /// <summary>
        /// Test LangAPIReportApiKeyIdGet
        /// </summary>
        [Test]
        public void LangAPIReportApiKeyIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string lang = null;
            //string id = null;
            //string apiKey = null;
            //instance.LangAPIReportApiKeyIdGet(lang, id, apiKey);
            
        }
        /// <summary>
        /// Test LangAPIReportApiKeyIdOptionsGet
        /// </summary>
        [Test]
        public void LangAPIReportApiKeyIdOptionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string lang = null;
            //string id = null;
            //string options = null;
            //string apiKey = null;
            //instance.LangAPIReportApiKeyIdOptionsGet(lang, id, options, apiKey);
            
        }
        /// <summary>
        /// Test LangAPITitleApiKeyIdGet
        /// </summary>
        [Test]
        public void LangAPITitleApiKeyIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string lang = null;
            //string id = null;
            //string apiKey = null;
            //var response = instance.LangAPITitleApiKeyIdGet(lang, id, apiKey);
            //Assert.IsInstanceOf<TitleData> (response, "response is TitleData");
        }
        /// <summary>
        /// Test LangAPITitleApiKeyIdOptionsGet
        /// </summary>
        [Test]
        public void LangAPITitleApiKeyIdOptionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string lang = null;
            //string apiKey = null;
            //string id = null;
            //string options = null;
            //var response = instance.LangAPITitleApiKeyIdOptionsGet(lang, apiKey, id, options);
            //Assert.IsInstanceOf<TitleData> (response, "response is TitleData");
        }
        /// <summary>
        /// Test LangAPIWikipediaApiKeyIdGet
        /// </summary>
        [Test]
        public void LangAPIWikipediaApiKeyIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string lang = null;
            //string apiKey = null;
            //string id = null;
            //var response = instance.LangAPIWikipediaApiKeyIdGet(lang, apiKey, id);
            //Assert.IsInstanceOf<WikipediaData> (response, "response is WikipediaData");
        }
    }

}
